{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","src","alt","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","DialogsElements","dialogs","map","d","MessageElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,6GCiBpMC,EAdI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,sBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,UACE,qBACEC,IAAI,4DACJC,IAAI,KAEN,cAAC,IAAD,CAASC,GAAIR,EAAb,SAAoBD,EAAMU,WCLjBC,EALC,SAACX,GACf,OAAO,qBAAKG,UAAWC,IAAEQ,QAAlB,SAA4BZ,EAAMY,W,iCCCrCC,EAAcC,YAAiB,IAoBtBC,cAAU,CAAEC,KAAM,2BAAlBD,EAlBQ,SAACf,GACtB,OACE,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXX,KAAK,iBACLY,YAAY,qBACZC,SAAU,CAACC,IAAUX,OAGzB,8BACE,kDCcOY,EA1BC,SAACzB,GACf,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACtC,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBR,GAAI6B,EAAE7B,IAAZ6B,EAAE7B,OAE/B8B,EAAkBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OACvC,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAEhC,OAStC,OAAKF,EAAMmC,OAET,sBAAKhC,UAAWC,IAAEyB,QAAlB,UACE,qBAAK1B,UAAWC,IAAEgC,aAAlB,SAAiCR,IACjC,qBAAKzB,UAAWC,IAAE6B,SAAlB,SAA6BD,IAC7B,cAAC,EAAD,CAAgBf,SAXA,SAACoB,GAGnBrC,EAAMsC,YAAYD,EAAOE,sBAGD,cAAC,IAAD,CAAU9B,GAAI,Y,+CCnBtC+B,EAA6B,SAACd,GAAD,MAAY,CAC3CS,OAAQT,EAAMe,KAAKN,S,QCoBNO,sBACbC,aAjBoB,SAACjB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAGE,SAACiB,GACxB,MAAO,CAILN,YAAa,SAACC,GACZK,EAASC,YAAmBN,UDZF,SAACO,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKhD,MAAMmC,OACT,cAACW,EAAD,eAAeE,KAAKhD,QADI,cAAC,IAAD,CAAUS,GAAG,eAHH,GACbwC,IAAMH,WAUtC,OAHqCH,YAAQH,EAARG,CACnCI,KCQWL,CAGbjB","file":"static/js/4.7519e06a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2D9tZ\",\"dialogsItems\":\"Dialogs_dialogsItems__1_ybP\",\"active\":\"Dialogs_active__3uw-6\",\"dialog\":\"Dialogs_dialog__3j5ke\",\"messages\":\"Dialogs_messages__uA7ph\",\"message\":\"Dialogs_message__1jcqW\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <img\r\n        src=\"https://klike.net/uploads/posts/2019-03/1551511835_22.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators\";\r\nimport { Textarea } from \"../../common/FormsControl/FormsControl\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n          validate={[required, maxLength50]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"dialog-add-message-form\" })(AddMessageForm);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let DialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n  let MessageElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    // в values хранится то, что мы назвали в Field (name=\"newMessageBody\")\r\n    //собранное сообщение отправляем в бизнес\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{DialogsElements}</div>\r\n      <div className={s.messages}>{MessageElements}</div>\r\n      <AddMessageForm onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import {\r\n  sendMessageCreator,\r\n  // updateNewMessageBodyCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // updateNewMessageBody: (body) => {\r\n    //   dispatch(updateNewMessageBodyCreator(body));\r\n    // },\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}